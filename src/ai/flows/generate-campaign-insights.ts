'use server';

/**
 * @fileOverview An AI agent to generate campaign insights and summaries.
 *
 * - generateCampaignInsights - A function that generates insights for a given campaign.
 * - GenerateCampaignInsightsInput - The input type for the generateCampaignInsights function.
 * - GenerateCampaignInsightsOutput - The return type for the generateCampaignInsights function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateCampaignInsightsInputSchema = z.object({
  campaignName: z.string().describe('The name of the campaign.'),
  platform: z.string().describe('The platform the campaign is running on (e.g., Google Ads, Meta).'),
  budget: z.number().describe('The budget allocated to the campaign.'),
  impressions: z.number().describe('The number of impressions the campaign has received.'),
  clicks: z.number().describe('The number of clicks the campaign has received.'),
  conversions: z.number().describe('The number of conversions the campaign has generated.'),
  revenue: z.number().describe('The revenue generated by the campaign.'),
  status: z.string().describe('The current status of the campaign (e.g., Active, Paused).'),
});
export type GenerateCampaignInsightsInput = z.infer<typeof GenerateCampaignInsightsInputSchema>;

const GenerateCampaignInsightsOutputSchema = z.object({
  summary: z.string().describe('A summary of the campaign performance.'),
  insights: z.string().describe('Key insights and recommendations for the campaign.'),
});
export type GenerateCampaignInsightsOutput = z.infer<typeof GenerateCampaignInsightsOutputSchema>;

export async function generateCampaignInsights(input: GenerateCampaignInsightsInput): Promise<GenerateCampaignInsightsOutput> {
  return generateCampaignInsightsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateCampaignInsightsPrompt',
  input: {schema: GenerateCampaignInsightsInputSchema},
  output: {schema: GenerateCampaignInsightsOutputSchema},
  prompt: `You are a marketing expert providing insights for a given campaign.

  Campaign Name: {{{campaignName}}}
  Platform: {{{platform}}}
  Budget: {{{budget}}}
  Impressions: {{{impressions}}}
  Clicks: {{{clicks}}}
  Conversions: {{{conversions}}}
  Revenue: {{{revenue}}}
  Status: {{{status}}}

  Generate a summary of the campaign performance and provide key insights and recommendations for improvement. Focus on key performance drivers and areas for improvement.`,
});

const generateCampaignInsightsFlow = ai.defineFlow(
  {
    name: 'generateCampaignInsightsFlow',
    inputSchema: GenerateCampaignInsightsInputSchema,
    outputSchema: GenerateCampaignInsightsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
